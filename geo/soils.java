import java.util.Random;
import java.util.Scanner;
class soils{
    public static void main(String[] args){
        Random rand = new Random();
        Scanner user = new Scanner(System.in);
        String[][] x = new String[300][2];
        int length=82;
        int[] z = new int[length];
        int r;
        int temp;
        for(int i=0; i<length; i++){
            z[i]=i;
        }
        for(int i=0; i<length; i++){
            r = rand.nextInt(length);
            temp = z[i];
            z[i] = z[r];
            z[r] = temp;
        }
        x[0][0] = "Soil (agri)"; x[0][1] = "The surface layer of earth that is capable of supporting rooted plant life.  The lower limit generally coincides with the lower limit of biological activity and thus generally extends only a few meters below the surface. ";
        x[1][0] = "Soil (eng.):"; x[1][1] = "All unconsolidated earthy materials that overlie bedrock.";
        x[2][0] = "Regolith"; x[2][1] = "Regolith is the general term for the entire mantle of loose, unconsolidated rock material of whatever origin, that overlies coherent bedrock.";
        x[3][0] = "Residual Soil"; x[3][1] = "Weathered Soil";
        x[4][0] = "Transported Soil"; x[4][1] = "erosion. soil material was transported and desposited";
        x[5][0] = "Saprolite:"; x[5][1] = "Chemically weathered rock. (residual soil)";
        x[6][0] = "Transported Soils"; x[6][1] = "Alluvium, Colluvium, Eolian Deposits, Glacial Deposits, Marine Deposits, Lacustrine Deposits";
        x[7][0] = "Pedon: "; x[7][1] = "The smallest volume that can be recognized as a soil individual. It has three dimensions and its area ranges from 1 to 10 square meters, depending on the variability in the horizons. The shape of the pedon is roughly hexagonal.";
        x[8][0] = "Pedogenesis: "; x[8][1] = "The process of soil formation as the integral result of the combination of soil forming factors.";
        x[9][0] = "Soil Forming (Weathering) Factors"; x[9][1] = "Parent Material (mineral stability, permeability, joins and fractures), Climate, Vegetation, Topography, Time";
        x[10][0] = "Soil Horizons"; x[10][1] = "so apparently as the soil gets weathered by the water passing through it, cations get brought down, and the anions stay where they are.";
        x[11][0] = "zone of eluviation"; x[11][1] = "zone of leaching";
        x[12][0] = "Alluvium"; x[12][1] = "material transported by a river";
        x[13][0] = "Colluvium"; x[13][1] = "material transported by gravity";
        x[14][0] = "eolian deposits"; x[14][1] = "material transported by wind";
        x[15][0] = "glacial deposits"; x[15][1] = "materials transported by a glacier";
        x[16][0] = "marine deposits"; x[16][1] = "yeah I guess. marine salt water";
        x[17][0] = "Lacustrine deposits"; x[17][1] = "water deposit, in a lake. fresh water.";
        x[18][0] = "zone of illuviation"; x[18][1] = "zone of accumulation";
        x[19][0] = "zone e will be very high in"; x[19][1] = "residual silicate minerals";
        x[20][0] = "the o layer on top is the"; x[20][1] = "organic zone";
        x[21][0] = "loam"; x[21][1] = "mix of grain sizes";
        x[22][0] = "soil orders"; x[22][1] = "";
        x[23][0] = "entisol"; x[23][1] = "minimal soil profile development, no longer purely a c horizon, just barely soil";
        x[24][0] = "andisol"; x[24][1] = "develop on fresh organic ash";
        x[25][0] = "gelosol"; x[25][1] = "minimal soil profile development, permafrost regions";
        x[26][0] = "inceptisol"; x[26][1] = "well developed A-horizon, weak B-horizon";
        x[27][0] = "mollisol"; x[27][1] = "thick, dark, highly organic A-horizon";
        x[28][0] = "alfisol"; x[28][1] = "thin A-horizon over clay-rich B-horizon, well developed E horizon. water moves ions, moves clay sized particals.";
        x[29][0] = "Spodosol"; x[29][1] = "Strong eluviation in A and E horizons; moving full ass sized organics in B-horizon since were moving so much with water I guess";
        x[30][0] = "Aridosol"; x[30][1] = "Arid environments, net evaporation. thin A and B horizons with little organics, caliche in B or C hor. water evaporates out of the ground and leaves evaporite minerals like calcite in the soil, caliche - calite residue.";
        x[31][0] = "Histosol"; x[31][1] = "swampy soil, wet, organic-rich soils, thick O and A horizons";
        x[32][0] = "vertisol"; x[32][1] = "high clay content; (vermiculite clay example) shrinks and swells w/soil moisture variations. does not allow horizons to develop";
        x[33][0] = "Oxisols:"; x[33][1] = "highly weathered, red B-horizon from oxidized Fe";
        x[34][0] = "Ultisols:"; x[34][1] = "highly weathered, B-horizon enriched in clay and Al-oxides. so well developed, you're left with is silica, oxygen and aluminium.";
        x[35][0] = "entisol facts"; x[35][1] = "No diagnostic subsurface horizons. Very recent or young soil, little if any profile development. form on resistant P.M., mine spoils, steep slopes, floodplains";
        x[36][0] = "inceptisol facts"; x[36][1] = "Slightly more development than entisols. Young soils but beginning of profile development is evident. May have a cambic horizon.";
        x[37][0] = "mollisols facts"; x[37][1] = "typically form under grasslands, central US. Soils with a mollic epipedon: Thick humus-rich surface horizon, high % base saturation throughout profile, slightly leached, very fertile soils.";
        x[38][0] = "Alfisol facts"; x[38][1] = "do have an argillic horizon. about 35% base saturation. develop in humid, temperate regions. vegetation is usually deciduous (forests, savanna). gray to brown surface horizon. Good for grain production";
        x[39][0] = "Spodosols facts"; x[39][1] = "Have a spodic horizon. Form in humid, cool climates and occur most often in conifer forests (New England, Mich., Canada). Form in acid, coarse, quartz (sandy) bearing P.M. Low fertility.";
        x[40][0] = "Ultisol facts"; x[40][1] = "Have Argillic or Kandic with <35% Base saturation. Common in S.E. US, humid tropical, and subtropical regions. Warm and humid environs. Old, highly weathered, high degree of development (ult). Low fertility.";
        x[41][0] = "Oxisols facts"; x[41][1] = "Have an oxic horizon. Dominated by residual accumulations of Fe and Al oxides and kaolinite. Most extensively weathered soils (occur in tropical regions). Intense red or yellow (high in oxidized iron). Low % Base Saturation. extensively leached. Low fertility.";
        x[42][0] = "Histosols facts"; x[42][1] = "Organic soils (peats and mucks). Mainly found in cold climates (Alaska, Canada, Finland, Russia). Low-lying swampy areas. Virtually all Histosols occur in wetland environments. Have very low bulk densities and very high water holding capacity. ";
        x[43][0] = "Vertisols facts"; x[43][1] = "High clay soils (>30% sticky shrink-swell clays). Deep cracks upon drying. Materials from soil surface fill cracks and become part of the subsurface when the cracks close (inverted soil). ";
        x[44][0] = "Aridisols facts"; x[44][1] = "Form in aridic moisture regimes (dry). Dry at least 6 months. Low OM. Little leaching. High base sat. Can be very productive if irrigated.";
        x[45][0] = "Andisols facts"; x[45][1] = "Form from P.M. of volcanic origin. Soil forms by rapid weathering of volcanic ash to produce poorly crystallized aluminosilicates (allophane & imogolite). Andisols are young soils ( and they have high OM). In dry climates, can be susceptible to wind erosion. Can have unusually low bulk densities.";
        x[46][0] = "Gelisols facts"; x[46][1] = "Presence of permafrost layer within 100 cm of soil surface defines this soil class. Young soils with little profile development. Cold temperatures and frozen conditions for much of the year slow the process of soil formation. May show evidence of cryoturbation. physical disturbance of soil material caused by freezing and thawing. ";
        x[47][0] = "Soils from Regions of Climatic Extremes"; x[47][1] = "Tropical Regions (Oxisols and Laterites. Ultisols and Bauxite. feric bearing clay minerals or aluminium bearing clay minerals), Arid Regions (Aridisols and Caliche. carbonate rich soils), Permafrost Regions (Gelisols)";
        x[48][0] = "Subdividing Soil Orders into Suborders is based on "; x[48][1] = "soil moisture regimes, soil temperature regimes";
        x[49][0] = "Soil Moisture Regimes"; x[49][1] = "(refers to the presence or absence of water saturated conditions or plant-available soil water at a defined section of the soil (control section)";
        x[50][0] = "Aquic"; x[50][1] = "soils with saturated horizons";
        x[51][0] = "Aridic"; x[51][1] = "arid climates; dry in all portions of profile most of the time";
        x[52][0] = "Udic"; x[52][1] = "humid climates; moisture usually exceeds evapotranspiration";
        x[53][0] = "Ustic"; x[53][1] = "between aridic and udic (sufficient moisture for crop growth)";
        x[54][0] = "Xeric"; x[54][1] = "Mediterranean climates; cool, moist winters and hot dry summers";
        x[55][0] = "Temperature regimes "; x[55][1] = "(Based on mean tempt. differences of soils at 50 cm depth)";
        x[56][0] = "Pergelic"; x[56][1] = "MAST < 0 ºC permafrost";
        x[57][0] = "Cryic"; x[57][1] = "0 ºC – 8 ºC, summer Temp <15 ºC ";
        x[58][0] = "Frigid"; x[58][1] = "0 < 8 ºC (has warmer summers)";
        x[59][0] = "Mesic"; x[59][1] = "8 < 15 ºC ";
        x[60][0] = "Thermic"; x[60][1] = "15  to 22 ºC";
        x[61][0] = "Hyperthermic"; x[61][1] = "MAST > 22 ºC ";
        x[62][0] = "paleosol"; x[62][1] = "ancient soil";
        x[63][0] = "we can look at the different soil profiles within the layers of the ground to tell info bout it and shit."; x[63][1] = "";
        x[64][0] = "sols can lithify and form sedimentary rocks that have the same soil profile within the rock."; x[64][1] = "";
        x[65][0] = "MAST"; x[65][1] = "mean annual soil temperature";
        x[66][0] = "Ustolls"; x[66][1] = "dry Mollisols (Mollisols with Ustic moisture regime)";
        x[67][0] = "Udults"; x[67][1] = "moist Ultisols (Ultisols with Udic moisture regime)";
        x[68][0] = "Aquents"; x[68][1] = "wet Entisols (Entisols with aquic moisture regimes)";
        x[69][0] = "Subgroups are "; x[69][1] = "subdivisions of the great groups.";
        x[70][0] = "The central concept of the great group makes up one subgroup, termed "; x[70][1] = "typic";
        x[71][0] = "Typic Hapludoll subgroup typifies the "; x[71][1] = "Hapludolls great group.";
        x[72][0] = "Other subgroups may have characteristics that intergrade between those of the central concept and soils of other orders, suborders or great groups. "; x[72][1] = "";
        x[73][0] = "Fluventic Haplaquoll "; x[73][1] = "-oll means Mollisol; aqu means aquic moisture (poor or very poor drainage); hapla means min. B horizon development; fluv flood plain; entic means entisol (young soil).";
        x[74][0] = "Mollic Albaqualf "; x[74][1] = "-alf means alfisol; aqu means aquic moisture regime; alba indicates a strongly developed E horizon";
        x[75][0] = "Soil Families"; x[75][1] = "Soils fall into the same family if at the same depth they have similar physical and chemical properties that affect plant root growth.";
        x[76][0] = "The soil properties include "; x[76][1] = "soil texture, mineralogy, cation exchange activity of the clay, temperature and depth of the soil penetrable by roots.";
        x[77][0] = "A family classification such as "; x[77][1] = "Typic Argiudolls loamy, mixed, active, mesic conveys very detailed information to a soil surveyor.";
        x[78][0] = "Soil Series"; x[78][1] = "Series is the most specific unit in the Soil Taxonomy. It is a subdivision of the family. It is defined by a specific range of soil properties such as kind, thickness and arrangement of horizons.";
        x[79][0] = "Series names are usually given to reflect their "; x[79][1] = "locations. There are about 19,000 series in today’s Soil Taxonomy.";
        x[80][0] = "Examples of soil series names"; x[80][1] = "Cordova series, Kokomo Series, Westland Series";
        x[81][0] = "Kokomo Soil "; x[81][1] = "Fertile Saturated Glacial Mollisol ";
        x[82][0] = ""; x[82][1] = "";
        x[83][0] = ""; x[83][1] = "";
        x[84][0] = ""; x[84][1] = "";
        x[85][0] = ""; x[85][1] = "";
        x[86][0] = ""; x[86][1] = "";
        x[87][0] = ""; x[87][1] = "";
        x[88][0] = ""; x[88][1] = "";
        x[89][0] = ""; x[89][1] = "";
        x[90][0] = ""; x[90][1] = "";
        x[91][0] = ""; x[91][1] = "";
        x[92][0] = ""; x[92][1] = "";
        x[93][0] = ""; x[93][1] = "";
        x[94][0] = ""; x[94][1] = "";
        x[95][0] = ""; x[95][1] = "";
        x[96][0] = ""; x[96][1] = "";
        x[97][0] = ""; x[97][1] = "";
        x[98][0] = ""; x[98][1] = "";
        x[99][0] = ""; x[99][1] = "";
        x[100][0] = ""; x[100][1] = "";
        x[101][0] = ""; x[101][1] = "";
        x[102][0] = ""; x[102][1] = "";
        x[103][0] = ""; x[103][1] = "";
        x[104][0] = ""; x[104][1] = "";
        x[105][0] = ""; x[105][1] = "";
        x[106][0] = ""; x[106][1] = "";
        x[107][0] = ""; x[107][1] = "";
        x[108][0] = ""; x[108][1] = "";
        x[109][0] = ""; x[109][1] = "";
        x[110][0] = ""; x[110][1] = "";
        x[111][0] = ""; x[111][1] = "";
        x[112][0] = ""; x[112][1] = "";
        x[113][0] = ""; x[113][1] = "";
        x[114][0] = ""; x[114][1] = "";
        x[115][0] = ""; x[115][1] = "";
        x[116][0] = ""; x[116][1] = "";
        x[117][0] = ""; x[117][1] = "";
        x[118][0] = ""; x[118][1] = "";
        x[119][0] = ""; x[119][1] = "";
        x[120][0] = ""; x[120][1] = "";
        x[121][0] = ""; x[121][1] = "";
        x[122][0] = ""; x[122][1] = "";
        x[123][0] = ""; x[123][1] = "";
        x[124][0] = ""; x[124][1] = "";
        x[125][0] = ""; x[125][1] = "";
        x[126][0] = ""; x[126][1] = "";
        x[127][0] = ""; x[127][1] = "";
        x[128][0] = ""; x[128][1] = "";
        x[129][0] = ""; x[129][1] = "";
        x[130][0] = ""; x[130][1] = "";
        x[131][0] = ""; x[131][1] = "";
        x[132][0] = ""; x[132][1] = "";
        x[133][0] = ""; x[133][1] = "";
        x[134][0] = ""; x[134][1] = "";
        x[135][0] = ""; x[135][1] = "";
        x[136][0] = ""; x[136][1] = "";
        x[137][0] = ""; x[137][1] = "";
        x[138][0] = ""; x[138][1] = "";
        x[139][0] = ""; x[139][1] = "";
        x[140][0] = ""; x[140][1] = "";
        x[141][0] = ""; x[141][1] = "";
        x[142][0] = ""; x[142][1] = "";
        x[143][0] = ""; x[143][1] = "";
        x[144][0] = ""; x[144][1] = "";
        x[145][0] = ""; x[145][1] = "";
        x[146][0] = ""; x[146][1] = "";
        x[147][0] = ""; x[147][1] = "";
        x[148][0] = ""; x[148][1] = "";
        x[149][0] = ""; x[149][1] = "";
        x[150][0] = ""; x[150][1] = "";
        x[151][0] = ""; x[151][1] = "";
        x[152][0] = ""; x[152][1] = "";
        x[153][0] = ""; x[153][1] = "";
        x[154][0] = ""; x[154][1] = "";
        x[155][0] = ""; x[155][1] = "";
        x[156][0] = ""; x[156][1] = "";
        x[157][0] = ""; x[157][1] = "";
        x[158][0] = ""; x[158][1] = "";
        x[159][0] = ""; x[159][1] = "";
        x[160][0] = ""; x[160][1] = "";
        x[161][0] = ""; x[161][1] = "";
        x[162][0] = ""; x[162][1] = "";
        x[163][0] = ""; x[163][1] = "";
        x[164][0] = ""; x[164][1] = "";
        x[165][0] = ""; x[165][1] = "";
        x[166][0] = ""; x[166][1] = "";
        x[167][0] = ""; x[167][1] = "";
        x[168][0] = ""; x[168][1] = "";
        x[169][0] = ""; x[169][1] = "";
        x[170][0] = ""; x[170][1] = "";
        x[171][0] = ""; x[171][1] = "";
        x[172][0] = ""; x[172][1] = "";
        x[173][0] = ""; x[173][1] = "";
        x[174][0] = ""; x[174][1] = "";
        x[175][0] = ""; x[175][1] = "";
        x[176][0] = ""; x[176][1] = "";
        x[177][0] = ""; x[177][1] = "";
        x[178][0] = ""; x[178][1] = "";
        x[179][0] = ""; x[179][1] = "";
        x[180][0] = ""; x[180][1] = "";
        x[181][0] = ""; x[181][1] = "";
        x[182][0] = ""; x[182][1] = "";
        x[183][0] = ""; x[183][1] = "";
        x[184][0] = ""; x[184][1] = "";
        x[185][0] = ""; x[185][1] = "";
        x[186][0] = ""; x[186][1] = "";
        x[187][0] = ""; x[187][1] = "";
        x[188][0] = ""; x[188][1] = "";
        x[189][0] = ""; x[189][1] = "";
        x[190][0] = ""; x[190][1] = "";
        x[191][0] = ""; x[191][1] = "";
        x[192][0] = ""; x[192][1] = "";
        x[193][0] = ""; x[193][1] = "";
        x[194][0] = ""; x[194][1] = "";
        x[195][0] = ""; x[195][1] = "";
        x[196][0] = ""; x[196][1] = "";
        x[197][0] = ""; x[197][1] = "";
        x[198][0] = ""; x[198][1] = "";
        x[199][0] = ""; x[199][1] = "";
        x[200][0] = ""; x[200][1] = "";
        x[201][0] = ""; x[201][1] = "";
        x[202][0] = ""; x[202][1] = "";
        x[203][0] = ""; x[203][1] = "";
        x[204][0] = ""; x[204][1] = "";
        x[205][0] = ""; x[205][1] = "";
        x[206][0] = ""; x[206][1] = "";
        x[207][0] = ""; x[207][1] = "";
        x[208][0] = ""; x[208][1] = "";
        x[209][0] = ""; x[209][1] = "";
        x[210][0] = ""; x[210][1] = "";
        x[211][0] = ""; x[211][1] = "";
        x[212][0] = ""; x[212][1] = "";
        x[213][0] = ""; x[213][1] = "";
        x[214][0] = ""; x[214][1] = "";
        x[215][0] = ""; x[215][1] = "";
        x[216][0] = ""; x[216][1] = "";
        x[217][0] = ""; x[217][1] = "";
        x[218][0] = ""; x[218][1] = "";
        x[219][0] = ""; x[219][1] = "";
        x[220][0] = ""; x[220][1] = "";
        x[221][0] = ""; x[221][1] = "";
        x[222][0] = ""; x[222][1] = "";
        x[223][0] = ""; x[223][1] = "";
        x[224][0] = ""; x[224][1] = "";
        x[225][0] = ""; x[225][1] = "";
        x[226][0] = ""; x[226][1] = "";
        x[227][0] = ""; x[227][1] = "";
        x[228][0] = ""; x[228][1] = "";
        x[229][0] = ""; x[229][1] = "";
        x[230][0] = ""; x[230][1] = "";
        x[231][0] = ""; x[231][1] = "";
        x[232][0] = ""; x[232][1] = "";
        x[233][0] = ""; x[233][1] = "";
        x[234][0] = ""; x[234][1] = "";
        x[235][0] = ""; x[235][1] = "";
        x[236][0] = ""; x[236][1] = "";
        x[237][0] = ""; x[237][1] = "";
        x[238][0] = ""; x[238][1] = "";
        x[239][0] = ""; x[239][1] = "";
        x[240][0] = ""; x[240][1] = "";
        x[241][0] = ""; x[241][1] = "";
        x[242][0] = ""; x[242][1] = "";
        x[243][0] = ""; x[243][1] = "";
        x[244][0] = ""; x[244][1] = "";
        x[245][0] = ""; x[245][1] = "";
        x[246][0] = ""; x[246][1] = "";
        x[247][0] = ""; x[247][1] = "";
        x[248][0] = ""; x[248][1] = "";
        x[249][0] = ""; x[249][1] = "";
        x[250][0] = ""; x[250][1] = "";
        x[251][0] = ""; x[251][1] = "";
        x[252][0] = ""; x[252][1] = "";
        x[253][0] = ""; x[253][1] = "";
        x[254][0] = ""; x[254][1] = "";
        x[255][0] = ""; x[255][1] = "";
        x[256][0] = ""; x[256][1] = "";
        x[257][0] = ""; x[257][1] = "";
        x[258][0] = ""; x[258][1] = "";
        x[259][0] = ""; x[259][1] = "";
        x[260][0] = ""; x[260][1] = "";
        x[261][0] = ""; x[261][1] = "";
        x[262][0] = ""; x[262][1] = "";
        x[263][0] = ""; x[263][1] = "";
        x[264][0] = ""; x[264][1] = "";
        x[265][0] = ""; x[265][1] = "";
        x[266][0] = ""; x[266][1] = "";
        x[267][0] = ""; x[267][1] = "";
        x[268][0] = ""; x[268][1] = "";
        x[269][0] = ""; x[269][1] = "";
        x[270][0] = ""; x[270][1] = "";
        x[271][0] = ""; x[271][1] = "";
        x[272][0] = ""; x[272][1] = "";
        x[273][0] = ""; x[273][1] = "";
        x[274][0] = ""; x[274][1] = "";
        x[275][0] = ""; x[275][1] = "";
        x[276][0] = ""; x[276][1] = "";
        x[277][0] = ""; x[277][1] = "";
        x[278][0] = ""; x[278][1] = "";
        x[279][0] = ""; x[279][1] = "";
        x[280][0] = ""; x[280][1] = "";
        x[281][0] = ""; x[281][1] = "";
        x[282][0] = ""; x[282][1] = "";
        x[283][0] = ""; x[283][1] = "";
        x[284][0] = ""; x[284][1] = "";
        x[285][0] = ""; x[285][1] = "";
        x[286][0] = ""; x[286][1] = "";
        x[287][0] = ""; x[287][1] = "";
        x[288][0] = ""; x[288][1] = "";
        x[289][0] = ""; x[289][1] = "";
        x[290][0] = ""; x[290][1] = "";
        x[291][0] = ""; x[291][1] = "";
        x[292][0] = ""; x[292][1] = "";
        x[293][0] = ""; x[293][1] = "";
        x[294][0] = ""; x[294][1] = "";
        x[295][0] = ""; x[295][1] = "";
        x[296][0] = ""; x[296][1] = "";
        x[297][0] = ""; x[297][1] = "";
        x[298][0] = ""; x[298][1] = "";
        x[299][0] = ""; x[299][1] = "";
        String n;
        //while(true){
            for(int i=0; i<length; i++){
                for(int j=0; j<2; j++){
                    System.out.print(x[z[i]][j]); 
                    n = user.nextLine();
                }
                System.out.println();
            }
        //}
    }
}