import java.util.Random;
import java.util.Scanner;
class blankstudy{
    public static void main(String[] args){
        Random rand = new Random();
        Scanner user = new Scanner(System.in);
        String[][] x = new String[300][2];
        int length=14;
        int[] z = new int[length];
        int r;
        int temp;
        for(int i=0; i<length; i++){
            z[i]=i;
        }
        for(int i=0; i<length; i++){
            r = rand.nextInt(length);
            temp = z[i];
            z[i] = z[r];
            z[r] = temp;
        }
        x[0][0] = "factors affecting weathering"; x[0][1] = "parent material(mineral stability, permeability, joints and fractures) climate, vegetation, topography, time";
        x[1][0] = "climate creates"; x[1][1] = "precipitation, heat transfer, and winds of an area";
        x[2][0] = "climate changes factors that induce such effects as surface moisture, vegetation, and weather"; x[2][1] = "";
        x[3][0] = "different climate cause different"; x[3][1] = "landscapes";
        x[4][0] = "Warm humid facies-"; x[4][1] = "Chemical rock decomposition, gentle slopes, and rock outcrops are rare.";
        x[5][0] = "Humid temperate facies-"; x[5][1] = "Chemical rock decomposition, increase in the steepness of slopes.";
        x[6][0] = "Dry climate facies-"; x[6][1] = "Mechanical rock decomposition, coarse soil fragments, rock escarpments are present, stream flow becomes irregular, and slope gradient increases yet.";
        x[7][0] = "Desert facies-"; x[7][1] = "The clearest of the facies and mechanical weathering acts alone.";
        x[8][0] = "Cold dry facies-"; x[8][1] = "Slightly snow covered deserts that experience little weathering other than freeze thaw.";
        x[9][0] = "Cold humid facies-"; x[9][1] = "Glacial features occur in this area.";
        x[10][0] = "nunatak"; x[10][1] = "bedrock that sticks up through a glacier";
        x[11][0] = "N pacydererma"; x[11][1] = "single celled algae that live in the oceans. like living on the surface. The left coiling likes it cold, Right coiling packyderma likes it warm";
        x[12][0] = "proxy for temperature"; x[12][1] = "an indirect way of telling the temperature many years ago";
        x[13][0] = "benthic foraminifera"; x[13][1] = "single celled algae that live in the bottom of the oceans, ";
        x[14][0] = "the single celled organism shells are made of Calcium carbonate, they get the oxygen from the ocean water"; x[14][1] = "There are different isotopes of oxygen, most oxygen is oxygen 16. theres 17 and 18. What are the percentages of 16, 17, 18. tells you the temperature of the ocean. del O18";
        x[15][0] = "delta O 18"; x[15][1] = "the ratio of oxygen 18 to oxygen 16";
        x[16][0] = "the two standards commonly used for comparing shell oxygen ratios are"; x[16][1] = "Standard mean ocean water (SMOW), and peedee belemnite (PDB)";
        x[17][0] = "oxygen 18 and oxygen 16 evaporate at different temperatures and pressures"; x[17][1] = "";
        x[18][0] = "oxygen 16 evaporates more easily than oxygen 18"; x[18][1] = "oxygen 18 is preferentially removed by precipitation. as the cloud moves across land it concentrates more and more in 16.";
        x[19][0] = "oxygen 16 gets stored in the glaciers. as the temperature of the earth lowers, and glaciers grow, the ocean water becomes higher in oxygen 18"; x[19][1] = "";
        x[20][0] = "intertropical convergence zone"; x[20][1] = "very warm and wet zone, it moves like a snake";
        x[21][0] = "hadley cell"; x[21][1] = "area of latitude where the warm air gets circulated around";
        x[22][0] = "lake bonneville"; x[22][1] = "super flat lake that used to exist. where they drive cars and mythbusters shit";
        x[23][0] = "glacial cycles bring"; x[23][1] = "higher winds, wind blown silt. less winds during interglacial periods. more energy glacial, less energy interglacials";
        x[24][0] = "the windblown silt core thing"; x[24][1] = "we are checking the ratios of iron to silica. when there's high winds, more silica is blown around so there will be a higher percentage of silica compared with iron.";
        x[25][0] = "sand from africa bit"; x[25][1] = "we are checking the ratio of deposits of regular mud vs sand blown in from africa. Percentage of calcium carbonate because the sand is silicate. The ocean mud is carbonate, land sediment is silicate.";
        x[26][0] = "we general slide into glaciation, but come out quickly"; x[26][1] = "sawtooth pattern instead of a sine wave";
        x[27][0] = "milankovitch cycles"; x[27][1] = "eccentricity(100,000 years), obliquity(41,000 years), precession(23,000 years)";
        x[28][0] = "thermohaline ocean circulation"; x[28][1] = "the ocean currents transfer heat up to what would be cold regions otherwise, The ocean currents pass through the mid latitudes, picking up heat, and they drop off the heat up north or in colder regions. water thats at the mid atlantic is picking up fresh water from the amazon river so its relatively fresh and warm. as the water moves north it cools down and evaporates, which makes it saltier, making it denser. the saltiness is more important when it comes to the density. when this water gets up to around greenland, its actually more dense than the surrounding water. the more dense water dives down and comes back around to the beginning of the cycle underneath the water moving up north";
        x[29][0] = "MOC"; x[29][1] = "Meridional Overturning Circulation";
        x[30][0] = "NADW"; x[30][1] = "North Atlastic Deep Water Ocean Circulation";
        x[31][0] = "de vries cycles"; x[31][1] = "210 cycles";
        x[32][0] = "schwabe cycles"; x[32][1] = "11 years";
        x[33][0] = "1700-1750"; x[33][1] = "";
        x[34][0] = "greenhouse gasses"; x[34][1] = "methane, carbon dioxide";
        x[35][0] = "carbon dioxide doesnt break down in the atmosphere for around 200 years, so its a bigger problem than methane."; x[35][1] = "";
        x[36][0] = "When a hurricane system passes over warm ocean water"; x[36][1] = "it energizes, the opposite happens with cold water";
        x[37][0] = "warm ocean water causes"; x[37][1] = "wetter wet areas, more intense hurricanes, higher peak annual floods <<<. changed geomorphology";
        x[38][0] = "el nino and la nina ocean current"; x[38][1] = "the ocean currents to the left of south america oscillate between being warm (el nino) and cold (la nina)";
        x[39][0] = "with the el nino ocean current shifts, "; x[39][1] = "you shift the positiions of the atmospheric high and low pressure cells over the pacific and over the continent";
        x[40][0] = "with an el nino, we create a low pressure system over the "; x[40][1] = "west coast of the US. a High pressure system over the east coast";
        x[41][0] = "with a la nina, we make a high pressure system over the"; x[41][1] = "west coast, and a low pressure system over the east coast. this is where we are at right now.";
        x[42][0] = "The nina weather systems affect the west coast more strongly"; x[42][1] = "";
        x[43][0] = "in an el nino system, we get"; x[43][1] = "warm dry air coming in from the alaska direction, around a zone of low pressure?";
        x[44][0] = "in a la nina system, we get "; x[44][1] = "cool wet air coming in from the alaska direction, around a block of high pressure";
        x[45][0] = "north atlantic oscillation positive mode"; x[45][1] = "the jet stream goes straight across north america and the atlantic, with a strong low pressure system to the north, and a strong high pressure system to the south";
        x[46][0] = "north atlantic oscillation negative mode"; x[46][1] = "we have a weak low and weak high pressure system which causes the jet stream to oscillate north and south as it travels to the east, can bring us colder wetter conditions";
        x[47][0] = "The power of the north atlantic oscillation has been ramping up in recent years"; x[47][1] = "";
        x[48][0] = "95% of the worlds glacial ice is on"; x[48][1] = "greenland and antarctica";
        x[49][0] = "rapid ice melt leads to "; x[49][1] = "sea level transgression and base level rise";
        x[50][0] = "antarctica is actually"; x[50][1] = "2 different glaciers/ice sheets, the west and east sheets separated by a mountain range. west is melting faster";
        x[51][0] = "the sea level is rising more rapidly than before 1980"; x[51][1] = "";
        x[52][0] = "the sea level rise is recorded in millimeters"; x[52][1] = "";
        x[53][0] = "town in england where they had to pump the water from its basin to the next basin instead of having it flood the mines and shit"; x[53][1] = "";
        x[54][0] = ""; x[54][1] = "";
        x[55][0] = ""; x[55][1] = "";
        x[56][0] = ""; x[56][1] = "";
        x[57][0] = ""; x[57][1] = "";
        x[58][0] = ""; x[58][1] = "";
        x[59][0] = ""; x[59][1] = "";
        x[60][0] = ""; x[60][1] = "";
        x[61][0] = ""; x[61][1] = "";
        x[62][0] = ""; x[62][1] = "";
        x[63][0] = ""; x[63][1] = "";
        x[64][0] = ""; x[64][1] = "";
        x[65][0] = ""; x[65][1] = "";
        x[66][0] = ""; x[66][1] = "";
        x[67][0] = ""; x[67][1] = "";
        x[68][0] = ""; x[68][1] = "";
        x[69][0] = ""; x[69][1] = "";
        x[70][0] = ""; x[70][1] = "";
        x[71][0] = ""; x[71][1] = "";
        x[72][0] = ""; x[72][1] = "";
        x[73][0] = ""; x[73][1] = "";
        x[74][0] = ""; x[74][1] = "";
        x[75][0] = ""; x[75][1] = "";
        x[76][0] = ""; x[76][1] = "";
        x[77][0] = ""; x[77][1] = "";
        x[78][0] = ""; x[78][1] = "";
        x[79][0] = ""; x[79][1] = "";
        x[80][0] = ""; x[80][1] = "";
        x[81][0] = ""; x[81][1] = "";
        x[82][0] = ""; x[82][1] = "";
        x[83][0] = ""; x[83][1] = "";
        x[84][0] = ""; x[84][1] = "";
        x[85][0] = ""; x[85][1] = "";
        x[86][0] = ""; x[86][1] = "";
        x[87][0] = ""; x[87][1] = "";
        x[88][0] = ""; x[88][1] = "";
        x[89][0] = ""; x[89][1] = "";
        x[90][0] = ""; x[90][1] = "";
        x[91][0] = ""; x[91][1] = "";
        x[92][0] = ""; x[92][1] = "";
        x[93][0] = ""; x[93][1] = "";
        x[94][0] = ""; x[94][1] = "";
        x[95][0] = ""; x[95][1] = "";
        x[96][0] = ""; x[96][1] = "";
        x[97][0] = ""; x[97][1] = "";
        x[98][0] = ""; x[98][1] = "";
        x[99][0] = ""; x[99][1] = "";
        x[100][0] = ""; x[100][1] = "";
        x[101][0] = ""; x[101][1] = "";
        x[102][0] = ""; x[102][1] = "";
        x[103][0] = ""; x[103][1] = "";
        x[104][0] = ""; x[104][1] = "";
        x[105][0] = ""; x[105][1] = "";
        x[106][0] = ""; x[106][1] = "";
        x[107][0] = ""; x[107][1] = "";
        x[108][0] = ""; x[108][1] = "";
        x[109][0] = ""; x[109][1] = "";
        x[110][0] = ""; x[110][1] = "";
        x[111][0] = ""; x[111][1] = "";
        x[112][0] = ""; x[112][1] = "";
        x[113][0] = ""; x[113][1] = "";
        x[114][0] = ""; x[114][1] = "";
        x[115][0] = ""; x[115][1] = "";
        x[116][0] = ""; x[116][1] = "";
        x[117][0] = ""; x[117][1] = "";
        x[118][0] = ""; x[118][1] = "";
        x[119][0] = ""; x[119][1] = "";
        x[120][0] = ""; x[120][1] = "";
        x[121][0] = ""; x[121][1] = "";
        x[122][0] = ""; x[122][1] = "";
        x[123][0] = ""; x[123][1] = "";
        x[124][0] = ""; x[124][1] = "";
        x[125][0] = ""; x[125][1] = "";
        x[126][0] = ""; x[126][1] = "";
        x[127][0] = ""; x[127][1] = "";
        x[128][0] = ""; x[128][1] = "";
        x[129][0] = ""; x[129][1] = "";
        x[130][0] = ""; x[130][1] = "";
        x[131][0] = ""; x[131][1] = "";
        x[132][0] = ""; x[132][1] = "";
        x[133][0] = ""; x[133][1] = "";
        x[134][0] = ""; x[134][1] = "";
        x[135][0] = ""; x[135][1] = "";
        x[136][0] = ""; x[136][1] = "";
        x[137][0] = ""; x[137][1] = "";
        x[138][0] = ""; x[138][1] = "";
        x[139][0] = ""; x[139][1] = "";
        x[140][0] = ""; x[140][1] = "";
        x[141][0] = ""; x[141][1] = "";
        x[142][0] = ""; x[142][1] = "";
        x[143][0] = ""; x[143][1] = "";
        x[144][0] = ""; x[144][1] = "";
        x[145][0] = ""; x[145][1] = "";
        x[146][0] = ""; x[146][1] = "";
        x[147][0] = ""; x[147][1] = "";
        x[148][0] = ""; x[148][1] = "";
        x[149][0] = ""; x[149][1] = "";
        x[150][0] = ""; x[150][1] = "";
        x[151][0] = ""; x[151][1] = "";
        x[152][0] = ""; x[152][1] = "";
        x[153][0] = ""; x[153][1] = "";
        x[154][0] = ""; x[154][1] = "";
        x[155][0] = ""; x[155][1] = "";
        x[156][0] = ""; x[156][1] = "";
        x[157][0] = ""; x[157][1] = "";
        x[158][0] = ""; x[158][1] = "";
        x[159][0] = ""; x[159][1] = "";
        x[160][0] = ""; x[160][1] = "";
        x[161][0] = ""; x[161][1] = "";
        x[162][0] = ""; x[162][1] = "";
        x[163][0] = ""; x[163][1] = "";
        x[164][0] = ""; x[164][1] = "";
        x[165][0] = ""; x[165][1] = "";
        x[166][0] = ""; x[166][1] = "";
        x[167][0] = ""; x[167][1] = "";
        x[168][0] = ""; x[168][1] = "";
        x[169][0] = ""; x[169][1] = "";
        x[170][0] = ""; x[170][1] = "";
        x[171][0] = ""; x[171][1] = "";
        x[172][0] = ""; x[172][1] = "";
        x[173][0] = ""; x[173][1] = "";
        x[174][0] = ""; x[174][1] = "";
        x[175][0] = ""; x[175][1] = "";
        x[176][0] = ""; x[176][1] = "";
        x[177][0] = ""; x[177][1] = "";
        x[178][0] = ""; x[178][1] = "";
        x[179][0] = ""; x[179][1] = "";
        x[180][0] = ""; x[180][1] = "";
        x[181][0] = ""; x[181][1] = "";
        x[182][0] = ""; x[182][1] = "";
        x[183][0] = ""; x[183][1] = "";
        x[184][0] = ""; x[184][1] = "";
        x[185][0] = ""; x[185][1] = "";
        x[186][0] = ""; x[186][1] = "";
        x[187][0] = ""; x[187][1] = "";
        x[188][0] = ""; x[188][1] = "";
        x[189][0] = ""; x[189][1] = "";
        x[190][0] = ""; x[190][1] = "";
        x[191][0] = ""; x[191][1] = "";
        x[192][0] = ""; x[192][1] = "";
        x[193][0] = ""; x[193][1] = "";
        x[194][0] = ""; x[194][1] = "";
        x[195][0] = ""; x[195][1] = "";
        x[196][0] = ""; x[196][1] = "";
        x[197][0] = ""; x[197][1] = "";
        x[198][0] = ""; x[198][1] = "";
        x[199][0] = ""; x[199][1] = "";
        x[200][0] = ""; x[200][1] = "";
        x[201][0] = ""; x[201][1] = "";
        x[202][0] = ""; x[202][1] = "";
        x[203][0] = ""; x[203][1] = "";
        x[204][0] = ""; x[204][1] = "";
        x[205][0] = ""; x[205][1] = "";
        x[206][0] = ""; x[206][1] = "";
        x[207][0] = ""; x[207][1] = "";
        x[208][0] = ""; x[208][1] = "";
        x[209][0] = ""; x[209][1] = "";
        x[210][0] = ""; x[210][1] = "";
        x[211][0] = ""; x[211][1] = "";
        x[212][0] = ""; x[212][1] = "";
        x[213][0] = ""; x[213][1] = "";
        x[214][0] = ""; x[214][1] = "";
        x[215][0] = ""; x[215][1] = "";
        x[216][0] = ""; x[216][1] = "";
        x[217][0] = ""; x[217][1] = "";
        x[218][0] = ""; x[218][1] = "";
        x[219][0] = ""; x[219][1] = "";
        x[220][0] = ""; x[220][1] = "";
        x[221][0] = ""; x[221][1] = "";
        x[222][0] = ""; x[222][1] = "";
        x[223][0] = ""; x[223][1] = "";
        x[224][0] = ""; x[224][1] = "";
        x[225][0] = ""; x[225][1] = "";
        x[226][0] = ""; x[226][1] = "";
        x[227][0] = ""; x[227][1] = "";
        x[228][0] = ""; x[228][1] = "";
        x[229][0] = ""; x[229][1] = "";
        x[230][0] = ""; x[230][1] = "";
        x[231][0] = ""; x[231][1] = "";
        x[232][0] = ""; x[232][1] = "";
        x[233][0] = ""; x[233][1] = "";
        x[234][0] = ""; x[234][1] = "";
        x[235][0] = ""; x[235][1] = "";
        x[236][0] = ""; x[236][1] = "";
        x[237][0] = ""; x[237][1] = "";
        x[238][0] = ""; x[238][1] = "";
        x[239][0] = ""; x[239][1] = "";
        x[240][0] = ""; x[240][1] = "";
        x[241][0] = ""; x[241][1] = "";
        x[242][0] = ""; x[242][1] = "";
        x[243][0] = ""; x[243][1] = "";
        x[244][0] = ""; x[244][1] = "";
        x[245][0] = ""; x[245][1] = "";
        x[246][0] = ""; x[246][1] = "";
        x[247][0] = ""; x[247][1] = "";
        x[248][0] = ""; x[248][1] = "";
        x[249][0] = ""; x[249][1] = "";
        x[250][0] = ""; x[250][1] = "";
        x[251][0] = ""; x[251][1] = "";
        x[252][0] = ""; x[252][1] = "";
        x[253][0] = ""; x[253][1] = "";
        x[254][0] = ""; x[254][1] = "";
        x[255][0] = ""; x[255][1] = "";
        x[256][0] = ""; x[256][1] = "";
        x[257][0] = ""; x[257][1] = "";
        x[258][0] = ""; x[258][1] = "";
        x[259][0] = ""; x[259][1] = "";
        x[260][0] = ""; x[260][1] = "";
        x[261][0] = ""; x[261][1] = "";
        x[262][0] = ""; x[262][1] = "";
        x[263][0] = ""; x[263][1] = "";
        x[264][0] = ""; x[264][1] = "";
        x[265][0] = ""; x[265][1] = "";
        x[266][0] = ""; x[266][1] = "";
        x[267][0] = ""; x[267][1] = "";
        x[268][0] = ""; x[268][1] = "";
        x[269][0] = ""; x[269][1] = "";
        x[270][0] = ""; x[270][1] = "";
        x[271][0] = ""; x[271][1] = "";
        x[272][0] = ""; x[272][1] = "";
        x[273][0] = ""; x[273][1] = "";
        x[274][0] = ""; x[274][1] = "";
        x[275][0] = ""; x[275][1] = "";
        x[276][0] = ""; x[276][1] = "";
        x[277][0] = ""; x[277][1] = "";
        x[278][0] = ""; x[278][1] = "";
        x[279][0] = ""; x[279][1] = "";
        x[280][0] = ""; x[280][1] = "";
        x[281][0] = ""; x[281][1] = "";
        x[282][0] = ""; x[282][1] = "";
        x[283][0] = ""; x[283][1] = "";
        x[284][0] = ""; x[284][1] = "";
        x[285][0] = ""; x[285][1] = "";
        x[286][0] = ""; x[286][1] = "";
        x[287][0] = ""; x[287][1] = "";
        x[288][0] = ""; x[288][1] = "";
        x[289][0] = ""; x[289][1] = "";
        x[290][0] = ""; x[290][1] = "";
        x[291][0] = ""; x[291][1] = "";
        x[292][0] = ""; x[292][1] = "";
        x[293][0] = ""; x[293][1] = "";
        x[294][0] = ""; x[294][1] = "";
        x[295][0] = ""; x[295][1] = "";
        x[296][0] = ""; x[296][1] = "";
        x[297][0] = ""; x[297][1] = "";
        x[298][0] = ""; x[298][1] = "";
        x[299][0] = ""; x[299][1] = "";
        String n;
        while(true){
            for(int i=0; i<length; i++){
                for(int j=0; j<2; j++){
                    System.out.print(x[z[i]][j]); 
                    n = user.nextLine();
                }
                System.out.println();
            }
        }
    }
}